version: '3'

services:

    # https://hub.docker.com/r/linuxserver/nextcloud/
    nextcloud:
        container_name: nextcloud
        image: linuxserver/nextcloud
        restart: unless-stopped
        volumes:
            - '${CONFIG_DIR}:/config'
            - '${FILES_DIR}:/data'
        environment:
            PUID: '${PUID}'
            PGID: '${PGID}'
            TZ: '${TZ}'
        labels:
            traefik.enable: true
            traefik.docker.network: traefik
            traefik.http.routers.nextcloud.entrypoints: https
            traefik.http.routers.nextcloud.tls.certresolver: cloudflare
            traefik.http.routers.nextcloud.rule: Host(`nextcloud.${CF_DOMAIN}`)
            traefik.http.routers.nextcloud.middlewares: secureheaders, cardcaldav
            traefik.http.services.nextcloud.loadbalancer.server.port: 443
            traefik.http.services.nextcloud.loadbalancer.server.scheme: https
            traefik.http.middlewares.cardcaldav.replacepathregex.regex: ^/.well-known/(card|cal)dav
            traefik.http.middlewares.cardcaldav.replacepathregex.replacement: /remote.php/dav/
        links:
            - mariadb
    
    # https://hub.docker.com/r/linuxserver/mariadb
    mariadb:
        container_name: mariadb
        image: linuxserver/mariadb
        restart: unless-stopped
        volumes:
            - '${DB_DIR}:/config'
        environment:
            PUID: '${PUID}'
            PGID: '${PGID}'
            TZ: '${TZ}'
            MYSQL_DATABASE: 'nextcloud'
            MYSQL_USER: 'nextcloud'
            MYSQL_PASSWORD: 'nextcloud'
            MYSQL_RANDOM_ROOT_PASSWORD: 'yes'

    # https://hub.docker.com/r/containous/whoami/
    whoami:
        image: "containous/whoami"
        container_name: "whoami"
        labels:
            traefik.enable: true
            traefik.docker.network: traefik
            traefik.http.routers.whoami.entrypoints: https
            traefik.http.routers.whoami.tls.certresolver: cloudflare
            traefik.http.routers.whoami.rule: Host(`whoami.${CF_DOMAIN}`)
            traefik.http.routers.whoami.middlewares: secureheaders
    
     # https://hub.docker.com/_/traefik/
    traefik:
        container_name: traefik
        image: traefik:2.0.0
        restart: unless-stopped
        environment:
            TZ: '${TZ}'
            CF_API_EMAIL: '${CF_API_EMAIL}'
            CF_API_KEY: '${CF_API_KEY}'
        networks:
            - traefik
        ports:
            - '80:80/tcp'
            - '443:443/tcp'
        volumes:
            - '/var/run/docker.sock:/var/run/docker.sock:ro'
            - 'traefik:/etc/traefik:rw'
        command:
            - "--log.level=INFO"
            - "--api=true"
            - "--global.sendanonymoususage=false"
            - "--serverstransport.insecureskipverify"
            - "--entrypoints.http.address=:80"
            - "--entrypoints.https.address=:443"
            - "--providers.docker=true"
            - "--providers.docker.exposedbydefault=false"
            - "--certificatesresolvers.cloudflare.acme.dnschallenge=true"
            - "--certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare"
            - "--certificatesresolvers.cloudflare.acme.storage=/etc/traefik/acme.json"
            - "--certificatesresolvers.cloudflare.acme.email=${CF_API_EMAIL}"
            # - "--certificatesresolvers.cloudflare.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
        labels:
            traefik.enable: true
            traefik.docker.network: traefik
            traefik.http.routers.traefik.entrypoints: https
            traefik.http.routers.traefik.tls.certresolver: cloudflare
            traefik.http.routers.traefik.rule: Host(`traefik.${CF_DOMAIN}`)
            traefik.http.routers.traefik.middlewares: secureheaders, basicauth
            traefik.http.routers.traefik.service: api@internal
            traefik.http.routers.http.entrypoints: http
            traefik.http.routers.http.rule: HostRegexp(`${CF_DOMAIN}`, `{subdomain:[a-z]+}.${CF_DOMAIN}`)
            traefik.http.routers.http.middlewares: redirectscheme
            traefik.http.middlewares.redirectscheme.redirectscheme.scheme: https
            traefik.http.middlewares.basicauth.basicauth.users: ${HTPASSWD}
            traefik.http.middlewares.secureheaders.headers.stsSeconds: 15552000
            traefik.http.middlewares.secureheaders.headers.framedeny: true
            traefik.http.middlewares.secureheaders.headers.sslForceHost: true
            traefik.http.middlewares.secureheaders.headers.sslRedirect: true
            traefik.http.middlewares.secureheaders.headers.stsIncludeSubdomains: true
            traefik.http.middlewares.secureheaders.headers.browserXssFilter: true
            traefik.http.middlewares.secureheaders.headers.contentTypeNosniff: true
            traefik.http.middlewares.secureheaders.headers.forceSTSHeader: true
            traefik.http.middlewares.secureheaders.headers.stsPreload: true
            traefik.http.middlewares.secureheaders.headers.customResponseHeaders.X-Robots-Tag: none
            traefik.http.middlewares.secureheaders.headers.customFrameOptionsValue: SAMEORIGIN

networks:
    traefik:
        name: traefik
        attachable: true

volumes:
    traefik: